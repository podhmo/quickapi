{
  "components": {
    "schemas": {
      "Error": {
        "additionalProperties": false,
        "default": {
          "code": 400,
          "message": "validation error"
        },
        "properties": {
          "code": {
            "default": 400,
            "description": "Error code",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "default": "validation error",
            "description": "message",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "title": "Error",
        "type": "object"
      },
      "Pet": {
        "additionalProperties": false,
        "example": {
          "id": "1",
          "name": "foo",
          "tag": "Cat"
        },
        "properties": {
          "id": {
            "description": "unique id of the pet",
            "type": "string"
          },
          "name": {
            "description": "name of the pet",
            "minLength": 1,
            "type": "string"
          },
          "tag": {
            "description": "id of the pet",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "Pet",
        "type": "object",
        "x-go-id": "main.Pet",
        "x-go-type": "main.Pet"
      }
    }
  },
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "title": "Swagger Petstore",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/pets": {
      "get": {
        "description": "Returns all pets from the system that the user has access to\n\t\tNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\n\t\tSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.",
        "operationId": "main.PetAPI.FindPets",
        "parameters": [
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 400,
              "description": "Error code",
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/Pet"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "list of pets"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "default error"
          }
        },
        "summary": "FindPets returns all pets",
        "tags": [
          "main"
        ]
      },
      "post": {
        "description": "AddPet creates a new pet in the store. Duplicates are allowed",
        "operationId": "main.PetAPI.AddPet",
        "parameters": [
          {
            "description": "pretty output (hmm)",
            "in": "query",
            "name": "pretty",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "default": "foo",
                    "description": "Name of the pet",
                    "type": "string"
                  },
                  "tag": {
                    "description": "Type of the pet",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "AddPetInput",
                "type": "object",
                "x-go-id": "main.AddPetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "example": {
                    "id": "1",
                    "name": "foo",
                    "tag": "Cat"
                  },
                  "properties": {
                    "id": {
                      "description": "unique id of the pet",
                      "type": "string"
                    },
                    "name": {
                      "description": "name of the pet",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tag": {
                      "description": "id of the pet",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-go-id": "main.Pet",
                  "x-go-type": "main.Pet"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "description": "bad request",
                    "summary": "bad request",
                    "value": {
                      "code": 400,
                      "message": "validation error"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "-"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "default error"
          }
        },
        "summary": "AddPet creates a new pet in the store. Duplicates are allowed",
        "tags": [
          "main"
        ]
      }
    },
    "/pets/{id}": {
      "delete": {
        "description": "DeletePet deletes a pet by ID",
        "operationId": "main.PetAPI.DeletePet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Empty is zero Input",
                  "title": "Empty",
                  "type": "object",
                  "x-go-id": "github.com/podhmo/quickapi/shared.Empty"
                }
              }
            },
            "description": "return 204"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "default error"
          }
        },
        "summary": "DeletePet deletes a pet by ID",
        "tags": [
          "main"
        ]
      },
      "get": {
        "description": "FindPetByID returns a pet based on a single ID",
        "operationId": "main.PetAPI.FindPetByID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "example": {
                    "id": "1",
                    "name": "foo",
                    "tag": "Cat"
                  },
                  "properties": {
                    "id": {
                      "description": "unique id of the pet",
                      "type": "string"
                    },
                    "name": {
                      "description": "name of the pet",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tag": {
                      "description": "id of the pet",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "title": "Pet",
                  "type": "object",
                  "x-go-id": "main.Pet",
                  "x-go-type": "main.Pet"
                }
              }
            },
            "description": ""
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "default error"
          }
        },
        "summary": "FindPetByID returns a pet based on a single ID",
        "tags": [
          "main"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/api"
    },
    {
      "description": "local development",
      "url": "http://localhost:8080"
    }
  ]
}
